provider "azurerm" {
  features {}
}

resource "azurerm_resource_group" "automate" {
  name     = "In-aks-automate-rg"
  location = "eastasia"
}

resource "azurerm_virtual_network" "automate" {
  name                = "automate-network"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.automate.location
  resource_group_name = azurerm_resource_group.automate.name
}

resource "azurerm_subnet" "automate" {
  name                 = "internal"
  resource_group_name  = azurerm_resource_group.automate.name
  virtual_network_name = azurerm_virtual_network.automate.name
  address_prefixes     = ["10.0.2.0/24"]
}

resource "azurerm_network_interface" "automate" {
  name                = "automate-nic"
  location            = azurerm_resource_group.automate.location
  resource_group_name = azurerm_resource_group.automate.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.automate.id
    private_ip_address_allocation = "Dynamic"
  }
}

resource "azurerm_windows_virtual_machine" "automate" {
  name                = "automate2"
  resource_group_name = azurerm_resource_group.automate.name
  location            = azurerm_resource_group.automate.location
  size                = "Standard_F2"
  admin_username      = "adminuser"
  admin_password      = "P@$$w0rd1234!"
  network_interface_ids = [
    azurerm_network_interface.automate.id,
  ]

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2016-Datacenter"
    version   = "latest"
  }
}

resource "azurerm_postgresql_server" "automate" {
  name                = "auto-postgres"
  location            = azurerm_resource_group.automate.location
  resource_group_name = azurerm_resource_group.automate.name

  sku_name = "B_Gen5_2"

  storage_mb                   = 5120
  backup_retention_days        = 7
  geo_redundant_backup_enabled = false
  auto_grow_enabled            = true

  administrator_login          = "psqladmin"
  administrator_login_password = "H@Sh1CoR3!"
  version                      = "9.5"
  ssl_enforcement_enabled      = true
}

resource "azurerm_postgresql_database" "automate" {
  name                = "autoedb"
  resource_group_name = azurerm_resource_group.automate.name
  server_name         = azurerm_postgresql_server.automate.name
  charset             = "UTF8"
  collation           = "English_United States.1252"
}

resource "azurerm_container_registry" "automate" {
  name                = "autocr1"
  resource_group_name = azurerm_resource_group.automate.name
  location            = azurerm_resource_group.automate.location
  sku                 = "Premium"
  admin_enabled       = false
  georeplications {
    location                = "westeurope"
    zone_redundancy_enabled = true
    tags                    = {}
  }
}

resource "azurerm_kubernetes_cluster" "automate" {
  name                = "testaks"
  location            = azurerm_resource_group.automate.location
  resource_group_name = azurerm_resource_group.automate.name
  dns_prefix          = "automaks1"

  default_node_pool {
    name       = "default"
    node_count = 1
    vm_size    = "Standard_D2_v2"
  }

  identity {
    type = "SystemAssigned"
  }

  tags = {
    Environment = "Production"
  }
}

output "client_certificate" {
  value     = azurerm_kubernetes_cluster.automate.kube_config.0.client_certificate
  sensitive = true
}

output "kube_config" {
  value = azurerm_kubernetes_cluster.automate.kube_config_raw

  sensitive = true
}
