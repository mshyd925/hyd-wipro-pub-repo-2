provider "azurerm" {
  features {}
}

resource "azurerm_resource_group" "automate" {
  name     = "In-aks-automate-rg"
  location = "eastasia"
}

resource "azurerm_postgresql_server" "automate" {
  name                = "postgresql-1"
  location            = azurerm_resource_group.automate.location
  resource_group_name = azurerm_resource_group.automate.name

  sku_name = "B_Gen5_2"

  storage_mb                   = 5120
  backup_retention_days        = 7
  geo_redundant_backup_enabled = false
  auto_grow_enabled            = true

  administrator_login          = "psqladmin"
  administrator_login_password = "H@Sh1CoR3!"
  version                      = "9.5"
  ssl_enforcement_enabled      = true
}

resource "azurerm_postgresql_database" "automate" {
  name                = "automatedb"
  resource_group_name = azurerm_resource_group.automate.name
  server_name         = azurerm_postgresql_server.automate.name
  charset             = "UTF8"
  collation           = "English_United States.1252"
}

resource "azurerm_virtual_network" "automate" {
  name                = "virtnetname"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.automate.location
  resource_group_name = azurerm_resource_group.automate.name
}

resource "azurerm_subnet" "automate" {
  name                 = "subnetname"
  resource_group_name  = azurerm_resource_group.automate.name
  virtual_network_name = azurerm_virtual_network.automate.name
  address_prefixes     = ["10.0.2.0/24"]
  service_endpoints    = ["Microsoft.Sql", "Microsoft.Storage"]
}

resource "azurerm_storage_account" "automate" {
  name                = "storageaccount1"
  resource_group_name = azurerm_resource_group.automate.name

  location                 = azurerm_resource_group.automate.location
  account_tier             = "Standard"
  account_replication_type = "LRS"

  network_rules {
    default_action             = "Deny"
    ip_rules                   = ["100.0.0.1"]
    virtual_network_subnet_ids = [azurerm_subnet.automate.id]
  }

  tags = {
    environment = "dev"
  }
}
resource "azurerm_storage_account" "automate" {
  name                     = "storageaccount2"
  resource_group_name      = azurerm_resource_group.automate.name
  location                 = azurerm_resource_group.automate.location
  account_tier             = "Standard"
  account_replication_type = "GRS"

  tags = {
    environment = "staging"
  }
}

resource "azurerm_storage_account" "automate" {
  name                     = "storageaccount3"
  resource_group_name      = azurerm_resource_group.automate.name
  location                 = azurerm_resource_group.automate.location
  account_tier             = "Standard"
  account_replication_type = "GRS"

  tags = {
    environment = "prod"
  }
}

resource "azurerm_container_registry" "automate" {
  name                = "contreg1"
  resource_group_name = azurerm_resource_group.automate.name
  location            = azurerm_resource_group.automate.location
  sku                 = "Premium"
  admin_enabled       = false
  georeplications {
    location                = "westeurope"
    zone_redundancy_enabled = true
    tags                    = {}
  }
}

resource "azurerm_key_vault" "automate" {
  name                        = "automatekeyvault"
  location                    = azurerm_resource_group.automate.location
  resource_group_name         = azurerm_resource_group.automate.name
  enabled_for_disk_encryption = true
  tenant_id                   = data.azurerm_client_config.current.tenant_id
  soft_delete_retention_days  = 7
  purge_protection_enabled    = false

  sku_name = "standard"

  access_policy {
    tenant_id = data.azurerm_client_config.current.tenant_id
    object_id = data.azurerm_client_config.current.object_id

    key_permissions = [
      "Get",
    ]

    secret_permissions = [
      "Get",
    ]

    storage_permissions = [
      "Get",
    ]
  }
}

resource "azurerm_search_service" "automate" {
  name                = "example-search-service"
  resource_group_name = azurerm_resource_group.automate.name
  location            = azurerm_resource_group.automate.location
  sku                 = "standard"
}

resource "azurerm_log_analytics_workspace" "automate" {
  name                = "acctest-01"
  location            = azurerm_resource_group.automate.location
  resource_group_name = azurerm_resource_group.automate.name
  sku                 = "PerGB2018"
  retention_in_days   = 30
}

resource "azurerm_kubernetes_cluster" "automate" {
  name                = "autoaks1"
  location            = azurerm_resource_group.automate.location
  resource_group_name = azurerm_resource_group.automate.name
  dns_prefix          = "autoaks1"

  default_node_pool {
    name       = "default"
    node_count = 1
    vm_size    = "Standard_D2_v2"
  }

  identity {
    type = "SystemAssigned"
  }

  tags = {
    Environment = "Production"
  }
}

output "client_certificate" {
  value     = azurerm_kubernetes_cluster.automate.kube_config.0.client_certificate
  sensitive = true
}

output "kube_config" {
  value = azurerm_kubernetes_cluster.automate.kube_config_raw

  sensitive = true
}
